--- linux-2.6.12-rc2-orig/mm/page_alloc.c	2005-04-04 18:40:05.000000000 +0200
+++ linux-2.6.12-rc2-fkt/mm/page_alloc.c	2005-05-21 01:12:06.692392777 +0200
@@ -35,6 +35,8 @@
 #include <linux/nodemask.h>
 #include <linux/vmalloc.h>
 
+#include <linux/fkt.h> /* st */
+
 #include <asm/tlbflush.h>
 #include "internal.h"
 
@@ -275,6 +277,8 @@ static inline void __free_pages_bulk (st
 	unsigned long page_idx;
 	int order_size = 1 << order;
 
+	FKT_PROBE2(FKT_SYSTEM_KEYMASK,FKT_PAGE_FREE_ENTRY_CODE,page,order); /* st */
+
 	if (unlikely(order))
 		destroy_compound_page(page, order);
 
@@ -307,6 +311,8 @@ static inline void __free_pages_bulk (st
 	set_page_order(page, order);
 	list_add(&page->lru, &zone->free_area[order].free_list);
 	zone->free_area[order].nr_free++;
+
+	FKT_PROBE0(FKT_SYSTEM_KEYMASK,FKT_PAGE_FREE_EXIT_CODE); /* st */
 }
 
 static inline void free_pages_check(const char *function, struct page *page)
@@ -740,6 +746,8 @@ __alloc_pages(unsigned int __nocast gfp_
 	int can_try_harder;
 	int did_some_progress;
 
+	FKT_PROBE2(FKT_SYSTEM_KEYMASK,FKT_PAGE_ALLOC_ENTRY_CODE,gfp_mask,order); /* st */
+
 	might_sleep_if(wait);
 
 	/*
@@ -753,6 +761,7 @@ __alloc_pages(unsigned int __nocast gfp_
 
 	if (unlikely(zones[0] == NULL)) {
 		/* Should this ever happen?? */
+		FKT_PROBE1(FKT_SYSTEM_KEYMASK,FKT_PAGE_ALLOC_EXIT_CODE,NULL); /* st */
 		return NULL;
 	}
 
@@ -903,6 +912,7 @@ nopage:
 	return NULL;
 got_pg:
 	zone_statistics(zonelist, z);
+	FKT_PROBE1(FKT_SYSTEM_KEYMASK,FKT_PAGE_ALLOC_EXIT_CODE,page); /* st */
 	return page;
 }
 
