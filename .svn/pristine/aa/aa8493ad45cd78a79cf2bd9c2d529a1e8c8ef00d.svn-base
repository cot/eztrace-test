--- linux-2.6.12-rc2-orig/fs/open.c	2005-04-04 18:37:52.000000000 +0200
+++ linux-2.6.12-rc2-fkt/fs/open.c	2005-05-21 01:10:55.551294597 +0200
@@ -24,6 +24,8 @@
 #include <linux/pagemap.h>
 #include <linux/syscalls.h>
 
+#include <linux/fkt.h> /* st */
+
 #include <asm/unistd.h>
 
 int vfs_statfs(struct super_block *sb, struct kstatfs *buf)
@@ -939,6 +941,15 @@ asmlinkage long sys_open(const char __us
 	flags |= O_LARGEFILE;
 #endif
 	tmp = getname(filename);
+	/* st */
+#if defined(CONFIG_FKT) || defined(CONFIG_FKT_MODULE)
+	if (fkt_active & FKT_FILES_KEYMASK) {
+		unsigned int name[8];
+		strncpy((char *)name,tmp,sizeof(name));
+		fkt_header( (((unsigned int)(FKT_OPEN_ENTRY_CODE))<<8) | (12+sizeof(name)),
+			name[0],name[1],name[2],name[3],name[4],name[5],name[6],name[7]);
+	}
+#endif /* (CONFIG_FKT) || defined(CONFIG_FKT_MODULE) */
 	fd = PTR_ERR(tmp);
 	if (!IS_ERR(tmp)) {
 		fd = get_unused_fd();
@@ -952,6 +963,7 @@ asmlinkage long sys_open(const char __us
 out:
 		putname(tmp);
 	}
+	FKT_PROBE1(FKT_FILES_KEYMASK,FKT_OPEN_EXIT_CODE,fd);
 	return fd;
 
 out_error:
@@ -1015,6 +1027,10 @@ asmlinkage long sys_close(unsigned int f
 {
 	struct file * filp;
 	struct files_struct *files = current->files;
+	int ret;
+
+	/* st */
+	FKT_PROBE1(FKT_FILES_KEYMASK,FKT_CLOSE_ENTRY_CODE,fd);
 
 	spin_lock(&files->file_lock);
 	if (fd >= files->max_fds)
@@ -1026,10 +1042,15 @@ asmlinkage long sys_close(unsigned int f
 	FD_CLR(fd, files->close_on_exec);
 	__put_unused_fd(files, fd);
 	spin_unlock(&files->file_lock);
-	return filp_close(filp, files);
+	ret =  filp_close(filp, files);
+	/* st */
+	FKT_PROBE1(FKT_FILES_KEYMASK,FKT_CLOSE_EXIT_CODE,ret);
+	return ret;
 
 out_unlock:
 	spin_unlock(&files->file_lock);
+	/* st */
+	FKT_PROBE1(FKT_FILES_KEYMASK,FKT_CLOSE_EXIT_CODE,-EBADF);
 	return -EBADF;
 }
 
